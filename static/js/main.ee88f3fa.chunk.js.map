{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","onShowAddTask","Task","task","onDelete","onToggle","onDoubleClick","id","reminder","day","name","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee88f3fa.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n    return (\r\n        <button onClick={onClick} style={{ backgroundColor: color }} className=\"btn\">\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'var(--green-400)',\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types';\r\nimport Button from './Button';\r\n\r\nconst Header = ({ title, onAdd, onShowAddTask }) => {\r\n\r\n\treturn (\r\n\t\t<header className=\"header\">\r\n\t\t\t<h1 className=\"headerTitle\">{title}</h1>\r\n\t\t\t<Button onClick={onAdd} color={`${onShowAddTask ? 'red' : 'var(--green-400)'}`} text={`${onShowAddTask ? 'Hide' : 'Add'}`} />\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nHeader.defaultProps = {\r\n\ttitle: 'Task Tracker',\r\n};\r\n\r\nHeader.propTypes = {\r\n\ttitle: PropTypes.string,\r\n};\r\n\r\n// CSS in JS / Usage: to make styling dynamic\r\n// const headingStyle = {\r\n//     color: 'red',\r\n//     backgroundColor: 'black'\r\n// }\r\n\r\nexport default Header;\r\n","const Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className='task' onDoubleClick={() => onToggle(task.id)}>\r\n            <p className={`reminder ${task.reminder ? 'show' : ''}`}>âœ…</p>\r\n            <div className='task-details'>\r\n                <div>\r\n                    <h3>{task.text}</h3>\r\n                    <p>{task.day}</p>\r\n                </div>\r\n                <div>\r\n                    <ion-icon onClick={() => onDelete(task.id)} name=\"close-outline\"></ion-icon>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task';\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{tasks.map((task) => (\r\n\t\t\t\t<Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} />\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from 'react';\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n\tconst [text, setText] = useState('');\r\n\tconst [day, setDay] = useState('');\r\n\tconst [reminder, setReminder] = useState(false);\r\n\r\n\tconst onSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (!text) {\r\n\t\t\talert('Please add task');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tonAdd({ text, day, reminder });\r\n\t\tsetText('');\r\n\t\tsetDay('');\r\n\t\tsetReminder(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form className=\"add-form\" onSubmit={onSubmit}>\r\n\t\t\t<div className=\"form-control\">\r\n\t\t\t\t<label>Task</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Add Task\"\r\n\t\t\t\t\tvalue={text}\r\n\t\t\t\t\tonChange={(e) => setText(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"form-control\">\r\n\t\t\t\t<label>Day & Time</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Add Day & Time\"\r\n\t\t\t\t\tvalue={day}\r\n\t\t\t\t\tonChange={(e) => setDay(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"form-control form-control-check\">\r\n\t\t\t\t<label>Set Reminder</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\tvalue={reminder}\r\n\t\t\t\t\tchecked={reminder}\r\n\t\t\t\t\tonChange={(e) => setReminder(e.currentTarget.checked)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<input className=\"btn btn-block\" type=\"submit\" value=\"Save Task\" />\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default AddTask;\r\n","import { useState } from 'react';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\n\nfunction App() {\n\tconst [showAddTask, setShowAddTask] = useState(false);\n\tconst [tasks, setTasks] = useState([\n\t\t{\n\t\t\tid: 1,\n\t\t\ttext: 'Doctors Appointment',\n\t\t\tday: 'Feb 5th at 2:30pm',\n\t\t\treminder: true,\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\ttext: 'Meeting at School',\n\t\t\tday: 'Feb 6th at 1:30pm',\n\t\t\treminder: true,\n\t\t},\n\t\t{\n\t\t\tid: 3,\n\t\t\ttext: 'Grocery time',\n\t\t\tday: 'Feb 19th at 10:00am',\n\t\t\treminder: false,\n\t\t},\n\t]);\n\n\tconst addTask = (task) => {\n\t\tconst id = Math.floor(Math.random() * 10000) + 1;\n\t\tconst newTask = { id, ...task };\n\t\tsetTasks([...tasks, newTask]);\n\t};\n\n\t// Delete Task\n\tconst deleteTask = (id) => {\n\t\tsetTasks(tasks.filter((task) => task.id !== id));\n\t};\n\n\tconst toggleReminder = (id) => {\n\t\tsetTasks(\n\t\t\ttasks.map((task) =>\n\t\t\t\ttask.id === id ? { ...task, reminder: !task.reminder } : task\n\t\t\t)\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<Header\n\t\t\t\tonAdd={() => setShowAddTask(!showAddTask)}\n\t\t\t\tonShowAddTask={showAddTask}\n\t\t\t/>\n\t\t\t<div className={`add-task-container ${showAddTask && 'show'}`}>\n\t\t\t\t<AddTask onAdd={addTask} />\n\t\t\t</div>\n\t\t\t{tasks.length > 0 ? (\n\t\t\t\t<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n\t\t\t) : (\n\t\t\t\t<h3>No Tasks</h3>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}